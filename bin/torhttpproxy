#!/usr/bin/env python

import argparse
import sys

from twisted.internet import reactor
from twisted.internet.endpoints import serverFromString
from twisted.python import log
from twisted.protocols.policies import ProtocolWrapper, WrappingFactory

from twisted.internet.defer import setDebugging

from txtorhttpproxy import TorAgent, AgentProxyFactory, PortforwardSwitchProtocol, ProtocolSwitcherWrappingFactory




def main():

    setDebugging(True)

    parser = argparse.ArgumentParser()
    parser.add_argument("serverEndpoint", help="A valid Twisted server endpoint descriptor string such as 'tcp:interface=127.0.0.1:8080'")
    parser.add_argument("--torSocksHostname", default=None, help="local Tor SOCKS hostname eg 127.0.0.1")
    parser.add_argument("--torSocksPort", default=None, help="local Tor SOCKS port eg 9050")
    parser.add_argument("--log", help="write logs. use '-' for stdout.")
    args = parser.parse_args()

    if args.log:
        if args.log == '-':
            log.startLogging(sys.stdout)
        else:
            log.startLogging(open(args.log,'a'))

    serverEndpoint = serverFromString(reactor, args.serverEndpoint)
    torAgent = TorAgent(reactor, torSocksHostname=args.torSocksHostname, torSocksPort=args.torSocksPort)

    wrappingFactory = ProtocolSwitcherWrappingFactory(AgentProxyFactory(torAgent))
    wrappingFactory.protocol = PortforwardSwitchProtocol

    connectDeferred = serverEndpoint.listen(wrappingFactory)

    # XXX
    def clientConnectionFailed(factory, reason):
        log.err(reason)
        log.err("httpTorProxy: clientConnectionFailed")

    connectDeferred.addErrback(lambda r: clientConnectionFailed(f, r))


    reactor.run()


if __name__ == '__main__':
    main()


